[{"text": "\\begin{equation} \\label{recursion} R(n) = \\sum_{i=1}^kR(n-s-(i-1)j-R(n-ij))+ \\nu \\end{equation}", "type": "latex", "itemtype": "equation", "prevtext": "\\begin{document}\n\n\\begin{abstract}\nWe define the generalized Golomb triangular recursion by\n$g_{j,s,\\lambda}(n) = g_{j,s,\\lambda}(n - s - g_{j,s,\\lambda}(n-j)) + \\lambda j$.\nFor particular choices of the initial conditions, we show that the solution of the recursion is a non-slow monotone sequence for which we can provide a combinatorial interpretation in terms of a weighted count of the leaves of a certain labeled infinite tree. We discover that more than one such tree interpretation is possible, leading to different choices of the initial conditions and alternative solutions that are closely related. In the case $\\lambda=1$ the initial conditions for these alternative tree interpretations coincide and we derive explicit closed forms for the solution sequence and its frequency function.\n\\end{abstract}\n\n\\keywords{nested recursion; slow sequence; Golomb's recursion}\n\n\\maketitle\n\n\\section{Introduction} \\label{sec1}\n\nIn this paper all values for the variables and parameters are integers unless otherwise specified.\nIt is shown in \\cite{NonHomog} that for $k \\geq 1$, $s \\geq 0$, $j \\geq 1$, $\\nu$ any constant, and with specified initial conditions, the solution to the non-homogeneous Conolly recursion ", "nexttext": " has a fascinating combinatorial interpretation. Specifically, $R(n)$ counts the number of \\emph{labels} that are less than or equal to $n$ in the leaves of a special labeled tree formed by ``grafting\" infinitely many copies of a finite, rooted tree ${\\mathcal T}$ (related to the parameter $\\nu$) onto a labeled $k$-ary tree. The initial conditions for the recursion are specified by the finite tree ${\\mathcal T}$ and the parameters $k,s$ and $j$.\n\nAny solution to (\\ref{recursion}) that can be characterized combinatorially in this way necessarily has the property that the difference $R(n+1) - R(n)$ between consecutive terms is either 0 or 1. We call such a solution sequence \\emph{slowly growing} or, more briefly, \\emph{slow} (see \\cite{EIRT, Rpaper, NonHomog}).\n\nIn general, very little is known about the existence or behavior of non-slow solutions to (\\ref{recursion}). The first example of such a solution appears in \\cite{HiTan}. In \\cite{CCT} it is shown that for $j=1$ the solution to the related homogeneous version of (\\ref{recursion}) with $\\nu=0$ is non-slow for all odd $k>1$, so long as the initial conditions are taken to be $k+s$ consecutive ones \\footnote{A corresponding result is conjectured to hold for even $k$ when $s=0$; see \\cite{CCT}, pp. 822-824.}.\n\nTo date all of the non-slow solutions to nested recursions of the form (\\ref{recursion}) have been derived by applying purely analytical (as opposed to combinatorial) techniques. Further, no non-slow solutions are known to any recursions of this form that have $\\nu \\neq 0$.\n\nIn this paper we address both these deficiencies, thereby taking an initial step toward developing a combinatorial interpretation for non-slow solutions to non-homogeneous nested recursions. More precisely, we extend the tree-based solution methodology described in \\cite{NonHomog} to derive a combinatorial interpretation for non-slow solutions to (\\ref{recursion}) in the case $k=1$ and $\\nu=\\lambda j$, where $\\lambda>0$ is a fixed parameter, that is, the family of recursions\n", "file": "1202.0276.tex", "index": 1, "pos": 1216, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"R(n)=\\sum_{i=1}^{k}R(n-s-(i-1)j-R(n-ij))+\\nu\" display=\"block\"><mrow><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mi>s</mi><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>j</mi></mrow><mo>-</mo><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo><mi>\u03bd</mi></mrow></mrow></math>"}, {"text": "\\begin{align}\ng_{j,s,\\lambda}(n) = g_{j,s,\\lambda}(n - s - g_{j,s,\\lambda}(n-j)) + \\lambda j\n\\label{recur}\n\\end{align}", "type": "latex", "itemtype": "equation", "prevtext": " has a fascinating combinatorial interpretation. Specifically, $R(n)$ counts the number of \\emph{labels} that are less than or equal to $n$ in the leaves of a special labeled tree formed by ``grafting\" infinitely many copies of a finite, rooted tree ${\\mathcal T}$ (related to the parameter $\\nu$) onto a labeled $k$-ary tree. The initial conditions for the recursion are specified by the finite tree ${\\mathcal T}$ and the parameters $k,s$ and $j$.\n\nAny solution to (\\ref{recursion}) that can be characterized combinatorially in this way necessarily has the property that the difference $R(n+1) - R(n)$ between consecutive terms is either 0 or 1. We call such a solution sequence \\emph{slowly growing} or, more briefly, \\emph{slow} (see \\cite{EIRT, Rpaper, NonHomog}).\n\nIn general, very little is known about the existence or behavior of non-slow solutions to (\\ref{recursion}). The first example of such a solution appears in \\cite{HiTan}. In \\cite{CCT} it is shown that for $j=1$ the solution to the related homogeneous version of (\\ref{recursion}) with $\\nu=0$ is non-slow for all odd $k>1$, so long as the initial conditions are taken to be $k+s$ consecutive ones \\footnote{A corresponding result is conjectured to hold for even $k$ when $s=0$; see \\cite{CCT}, pp. 822-824.}.\n\nTo date all of the non-slow solutions to nested recursions of the form (\\ref{recursion}) have been derived by applying purely analytical (as opposed to combinatorial) techniques. Further, no non-slow solutions are known to any recursions of this form that have $\\nu \\neq 0$.\n\nIn this paper we address both these deficiencies, thereby taking an initial step toward developing a combinatorial interpretation for non-slow solutions to non-homogeneous nested recursions. More precisely, we extend the tree-based solution methodology described in \\cite{NonHomog} to derive a combinatorial interpretation for non-slow solutions to (\\ref{recursion}) in the case $k=1$ and $\\nu=\\lambda j$, where $\\lambda>0$ is a fixed parameter, that is, the family of recursions\n", "nexttext": "\nwith appropriately specified initial conditions.\n\nOur focus on solving (\\ref{recur}) is motivated by several considerations. First, observe that for $j=\\lambda=1$, $s=0$ and initial condition $g_{1,0,1}(1)=1$, (\\ref{recur}) is Golomb's non-homogeneous nested triangular recursion \\cite{Golomb1990}. Golomb was the first to investigate a non-homogeneous nested recursion of this type; he showed that its solution is the slow sequence 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, \\ldots where every positive integer $n$ appears precisely $n$ times. That is, the frequency function $\\phi(n)$ of this sequence is given by $\\phi(n) = n$. Golomb further observed that this solution also has the neat closed form ", "file": "1202.0276.tex", "index": 3, "pos": 3349, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle g_{j,s,\\lambda}(n)=g_{j,s,\\lambda}(n-s-g_{j,s,\\lambda}(n-j))+\\lambda&#10;j\" display=\"inline\"><mrow><mrow><msub><mi>g</mi><mrow><mi>j</mi><mo>,</mo><mi>s</mi><mo>,</mo><mi>\u03bb</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><msub><mi>g</mi><mrow><mi>j</mi><mo>,</mo><mi>s</mi><mo>,</mo><mi>\u03bb</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mi>s</mi><mo>-</mo><mrow><msub><mi>g</mi><mrow><mi>j</mi><mo>,</mo><mi>s</mi><mo>,</mo><mi>\u03bb</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mi>j</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>j</mi></mrow></mrow></mrow></math>"}, {"text": "\\begin{equation} g_{1,0,1}(n) = \\left\\lfloor \\frac{ \\left\\lfloor \\sqrt{8n} \\right\\rfloor + 1}{2}\\right\\rfloor \\label{closed} \\end{equation}", "type": "latex", "itemtype": "equation", "prevtext": "\nwith appropriately specified initial conditions.\n\nOur focus on solving (\\ref{recur}) is motivated by several considerations. First, observe that for $j=\\lambda=1$, $s=0$ and initial condition $g_{1,0,1}(1)=1$, (\\ref{recur}) is Golomb's non-homogeneous nested triangular recursion \\cite{Golomb1990}. Golomb was the first to investigate a non-homogeneous nested recursion of this type; he showed that its solution is the slow sequence 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, \\ldots where every positive integer $n$ appears precisely $n$ times. That is, the frequency function $\\phi(n)$ of this sequence is given by $\\phi(n) = n$. Golomb further observed that this solution also has the neat closed form ", "nexttext": ".\n\nSecond, one of us chanced upon the following natural related question: find a closed form for the general term in the sequence 1, 3, 3, 3, 5, 5, 5, 5, 5, \\ldots where each odd natural number $2m+1$ appears $2m+1$ times. This non-slow, monotone sequence appears in \\cite{sna} as entry A001650, where it is noted that it is generated by the ``Golomb-like\" recursion coinciding with (\\ref{recur}) with $j=2, s=0$, and $\\lambda = 1$ and initial conditions 1, 3, 3. From there we successively generalized the form of the nested recursion along the lines of (\\ref{recursion}) to yield (\\ref{recur}), while simultaneously developing appropriate analogues for the initial conditions of interest (more details are provided on these in Section \\ref{sec2}).\n\n\\iffalse\n; concurrently, as we soon show, we identified that the initial conditions of interest consist of $s+1$ 1s followed by $j$ repetitions of the value $j+1$.\n\nThe natural generalization of Golomb's recursion with $j=\\lambda=1$ but any $s \\geq 0$ and $s+1$ initial values all equal to 1 is discussed briefly in \\cite{Rpaper} and \\cite{NonHomog}. There it is observed that the solution has a combinatorial interpretation in terms of counting leaves in a certain infinite unary tree, so is slow, and has frequency function $\\phi(n) = n + s$. For instance, $g_{1,2}(n)$ generates the sequence 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, \\ldots.\n\nBased on our extensive experience with such recursions, it seemed natural to consider using a string of 1s of sufficient length to ensure that the recursion stayed defined (see \\cite{BKT, CCT, Rpaper} for various examples of nested recursions with such initial conditions providing interesting results). Very quickly we identified\n\n\\fi\n\nFinally, recursion (\\ref{recur}) occurs naturally in the context of our analysis in \\cite{NonHomog} for the case $k=1$, where it follows immediately from the formula for $\\nu$ (see \\cite{NonHomog}, p. 6) that with $k=1$ a tree-based slow solution can only exist if $\\nu$ is a positive multiple of $j$ \\footnote{In fact, this is true for the even more general tree-grafting methodology described in \\cite{NonHomog}, Section 4. We are indebted to Mustazee Rahman for pointing this out.}. Here we solve this recursion with very different initial conditions from those in \\cite{NonHomog}, in particular, they are not slow.\n\nThe outline of the rest of the paper is as follows. In the next section we show how to extend the tree-based solution methodology in \\cite{NonHomog} to derive a non-slow solution to (\\ref{recur}) with specified initial conditions. In Section \\ref{sec3} we illustrate how more than one such tree interpretation is possible, leading to different choices of the initial conditions and alternative solutions that are closely related. In the case $\\lambda=1$ the initial conditions for these alternative tree interpretations coincide, so we conclude in Section \\ref{sec4} by deriving explicit closed forms for the solution sequence and its frequency function in this case.\n\n\\section{Combinatorial interpretation of the generalized Golomb triangular recursion} \\label{sec2}\n\nIn this section we give a combinatorial interpretation of the sequence generated by (\\ref{recur}); more precisely, we show how this sequence gives a weighted count of the leaves of the labeled infinite tree ${\\mathcal K}$ which we construct now. Fix integers $j,\\lambda > 0$ and $s \\geq 0$, which will correspond to the desired parameters of the recursion. For ease of reference, in what follows we write $g(n)$ in place of $g_{j,s,\\lambda}(n)$ where there is no confusion.\n\nOur approach closely resembles that of \\cite{NonHomog}. There are two key steps in our construction. First we construct the nodes and edges that form the skeleton of ${\\mathcal K}$. Then we insert the consecutive positive integers that are the labels in the nodes of ${\\mathcal K}$. To do this, first we must specify the order in which the nodes of ${\\mathcal K}$ are to be traversed one at a time; then we insert the appropriate number of labels (either $1$ or $s$) in each node. To help describe this construction, we illustrate our discussion for the case $j=2$, $\\lambda=3$ and $s=4$.\n\n\\subsection*{Constructing the skeleton of ${\\mathcal K}$}\nThe skeleton of ${\\mathcal K}$ consists of an infinite sequence ${\\mathcal K}_i, i \\geq 0$ of rooted, finite subtrees of ${\\mathcal K}$ that we connect together to form ${\\mathcal K}$.\n\nWe define ${\\mathcal K}_0$ to be a chain consisting of two nodes connected by a single edge; we call this a chain of length $2$. We take one of the nodes to be the root of ${\\mathcal K}_0$ while the other node at the end of the chain is a leaf. We form subtree ${\\mathcal K}_1$ as follows: take a copy of ${\\mathcal K}_0$ and attach exactly $\\lambda$ chains with $j$ nodes (``length $j$\") to the leaf node. Note that ${\\mathcal K}_1$ has $\\lambda$ leaves. For $i > 1$ we construct the subtree ${\\mathcal K}_i$ in an analogous way: take a copy of ${\\mathcal K}_{i-1}$ and attach a chain of length $j$ to each of its $\\lambda$ leaves. For each $i$, we refer to the root of ${\\mathcal K}_i$ as the $i^{th}$ \\textbf{supernode} of ${\\mathcal K}$. The single node connected to the $i^{th}$ supernode is called $i^{th}$ \\textbf{knot node}, while all other nodes of ${\\mathcal K}_i$ are \\textbf{regular nodes}. Note that in every ${\\mathcal K}_i, i \\geq 1$ the regular nodes at the end of each of the $\\lambda$ chains are leaves.\n\nNext, for all $i \\geq 0$ we connect the subtree ${\\mathcal K}_i$ to ${\\mathcal K}_{i+1}$ by adding an edge from the $i^{th}$ supernode to the $(i+1)^{th}$. To complete the construction of ${\\mathcal K}$ we attach an extra regular node as a child of the first supernode in ${\\mathcal K}_0$. We call this additional regular node the \\textbf{initial leaf of ${\\mathcal K}$}. See Figure \\ref{fig1} for the construction of ${\\mathcal K}$ for the case $j=2$, $\\lambda=3$ and $s=4$; note that supernodes are marked by rectangles.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.35]{fig1.png}\n\\caption{The initial portion of the skeleton of ${\\mathcal K}$} \\label{fig1}\n\\end{center}\n\\end{figure}\n\n\\subsection*{Labeling ${\\mathcal K}$}\nWe insert one label into each regular node of ${\\mathcal K}$ and $s$ labels into each supernode. The labels consist of successive integers starting at 1. Before we can insert these labels we must specify the traversal order of the nodes in ${\\mathcal K}$. We recursively define a \\textbf{pre-order} traversal as follows: ${\\mathcal K}_0$ is traversed by beginning at the initial leaf followed by the supernode itself and then to the remaining leaf. Having traversed ${\\mathcal K}_i$ for $i \\geq 0$, the subtree ${\\mathcal K}_{i+1}$ is traversed next by starting at the $(i+1)^{th}$ supernode, then continuing to the knot node immediately below it, and then traversing the length of each of the $\\lambda$ chains from left to right. See Figure \\ref{fig2} for the labeling in case $j=2$, $\\lambda=3$ and $s=4$.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.35]{fig2.png}\n\\caption{Labeling the initial portion of the skeleton of ${\\mathcal K}$} \\label{fig2}\n\\end{center}\n\\end{figure}\n\nLet ${\\mathcal K}(n)$ be the subtree of ${\\mathcal K}$ consisting of all the nodes of ${\\mathcal K}$ with label(s) less than or equal to $n$. Observe that by definition ${\\mathcal K}(n)$ necessarily consists of all the labeled nodes and edges in some finite number of subtrees ${\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}_{m-1}$ of ${\\mathcal K}$, together with the subtree ${\\mathcal K}^*_m$ which consists of a portion (including possibly all) of the subtree ${\\mathcal K}_m$. For compactness we write ${\\mathcal K}(n) = {\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}_{m-1}, {\\mathcal K}^*_m$. If ${\\mathcal K}^*_m$ is not all of ${\\mathcal K}_m$ then it has fewer than $\\lambda$ chains attached to its knot node and/or one of these chains has fewer than $mj$ nodes; in this case we call the subtree ${\\mathcal K}^*_m$ \\textbf{incomplete}.\n\nWe assign a weight of $1$ to the initial leaf of ${\\mathcal K}$ while the rest of the leaves receive the weight $j$. Define the \\textbf{leaf weight sequence} $w_{j,s,\\lambda}(n)$ whose $n^{th}$ member equals the sum of the weights of the leaves of ${\\mathcal K}$ that are in ${\\mathcal K}(n)$. In other words, $w_{j,s,\\lambda}(n)$ is the total weight of the leaves of ${\\mathcal K}$ with label less than or equal to $n$; in Figure \\ref{fig2} $w_{2,3,4}(n)$ begins 1,1,1,1,1,3,3,3,3,3,3,3,5,5,7,7,9,9,9,9,9,9,9,9,9,11, \\ldots. \\footnote{Observe that for $j=2, s=0, \\lambda=1$ the leaf weight sequence of ${\\mathcal K}$ is just the sequence 1,3,3,3,5,5,5,5,5, \\ldots discussed in Section \\ref{sec1}.} Where there is no confusion we write $w(n)=w_{j,s,\\lambda}(n)$.\n\nOne needs to be careful to distinguish leaves of ${\\mathcal K}$ from leaves of ${\\mathcal K}(n)$. In particular, not all leaves of ${\\mathcal K}(n)$ are leaves of ${\\mathcal K}$. For example, in Figure \\ref{fig2}, the node containing the label 52 is a leaf of ${\\mathcal K}(52)$ but not of ${\\mathcal K}$.\n\nNow we are ready to state our main result on the combinatorial interpretation of the integer sequence generated by $g(n)$.\n\n\\begin{theorem} The leaf weight sequence $w(n)$ is the solution generated by the recursion (\\ref{recur}) with initial conditions $g(n)= w(n)$ for $1\\leq n \\leq 3 +2s + \\lambda j$. That is, if $g(n)=w(n)$ for $1\\leq n \\leq 3 +2s + \\lambda j$ then $g(n)=w(n)$ for each positive integer $n$.\n\\label{thm:count}\n\\end{theorem}\n\nThe key to proving Theorem \\ref{thm:count} lies with the pruning operation ${\\mathcal P}$ on ${\\mathcal K}(n) = {\\mathcal K}_0$, ${\\mathcal K}_1$, $\\ldots$, ${\\mathcal K}_{m-1}$, ${\\mathcal K}^*_m$ which yields a new tree ${\\mathcal P}{\\mathcal K}(n)$ defined as follows: first disconnect the initial leaf from ${\\mathcal K}_0$ and remove the rest of ${\\mathcal K}_0$ (together with its labels) from the tree. Next, for $1 \\leq i < m$, delete the $j$ largest labels along with the nodes that contain them from each chain connected to $i^{th}$ knot node in ${\\mathcal K}_i$. From the construction of ${\\mathcal K}$ it follows that doing so turns each ${\\mathcal K}_i$ into ${\\mathcal K}_{i-1}$, $1 \\leq i < m$.\n\nNow we turn our attention to ${\\mathcal K}^*_m$. There are three cases: (1) if ${\\mathcal K}^*_m$ has at least $2$ chains connected to its knot node, then delete the $j$ largest labels and the nodes that contain these labels from each chain with at least $j$ labels; (2) if ${\\mathcal K}^*_m$ has fewer than 2 chains but has at least $j$ labels in total, then delete the largest $j$ labels and all the nodes that become unlabeled as a result; (3) finally, if ${\\mathcal K}^*_m$ has fewer than $j$ labels, then don't do anything. In all cases, note that the pruning operation turns ${\\mathcal K}^*_m$ into ${\\mathcal K}^*_{m-1}$, some portion of ${\\mathcal K}_{m-1}$.\n\nFinally, we reconnect the initial leaf to the supernode of the subtree that started initially (before any pruning took place) as ${\\mathcal K}_1$ and relabel the resulting tree in pre-order as defined above. It follows that ${\\mathcal P} {\\mathcal K}(n)$ consists of the finite sequence of subtrees of ${\\mathcal K}$: ${\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}^*_{m-1}$ and it must be the case that, after relabeling, ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(d)$ for some $d<n$. See Figure \\ref{fig3} where we illustrate this for the pruning of ${\\mathcal K}(52)$, which becomes the subtree ${\\mathcal K}(31)$.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.25]{fig3.png}\n\\caption{Pruning ${\\mathcal K}(52)$} \\label{fig3}\n\\end{center}\n\\end{figure}\n\nWe now show the relation between $n$ and $d$ for any pruned subtree, from which Theorem \\ref{thm:count} is immediate by a simple induction argument.\n\n\\begin{lemma}\nFor $n > 3+2s+\\lambda j$, ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(n-s-w(n-j))$ and consequently $w(n) = w(n-s-w(n-j)) + \\lambda j$.\n\\label{lemma:prun}\n\\end{lemma}\n\\begin{proof}\nFix $n > 3+2s+\\lambda j$. Let ${\\mathcal K}(n) ={\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}_{m-1}, {\\mathcal K}^*_m$. Since $n> 3+2s+\\lambda j$ and $3+2s+\\lambda j$ is the total number of labels contained in ${\\mathcal K}_0$ and ${\\mathcal K}_1$, it follows that $m > 1$.\n\nAs we noted above, it must be the case that after relabeling ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(d)$ for some $d<n$. It suffices to show that $d=n-s-w(n-j)$, that is, we need to show that the total number of labels removed from the tree during the pruning operation is $s+w(n-j)$. By deleting the supernode of ${\\mathcal K}_0$ we removed $s$ labels. Thus we must show that the number of labels removed from ${\\mathcal K}_1, \\ldots, {\\mathcal K}_{m-1}, {\\mathcal K}^*_m$ plus the one label removed by deleting the leaf of ${\\mathcal K}_0$ together sum up to $w(n-j)$.\n\nNote that since ${\\mathcal K}_{m-1}$ is complete it has $\\lambda$ chains of length $\\geq j$ attached to its knot node. Denote the chain with the largest label in ${\\mathcal K}_{m-1}$ by ${\\mathcal C}_0$. Suppose ${\\mathcal K}^*_m$ contains the $m^{th}$ knot node and there are at least 2 chains connected to it. Denote these chains in ${\\mathcal K}^*_m$ by ${\\mathcal C}_1, \\ldots, {\\mathcal C}_p$ where $ 2 \\leq p \\leq \\lambda$. Otherwise, as we discussed above, we consider ${\\mathcal K}^*_m$ itself as a chain, which we call ${\\mathcal C}_1$. In either case, we know that the node with label $n$ lies in the chain ${\\mathcal C}_p$ where $1 \\leq p \\leq \\lambda$. We consider two cases.\n\nCase 1: assume that ${\\mathcal C}_p$ contains $t<j$ labels. Consider the node with label $n-j>(\\lambda-1)j+2s+3>1$ in ${\\mathcal K}(n)$. Since ${\\mathcal C}_p$ has less than $j$ labels and the chain ${\\mathcal C}_{p-1}$ has at least $j$ labels we know that the node with label $n-j$ lies in ${\\mathcal C}_{p-1}$. Moreover, it is not a leaf node of ${\\mathcal K}$ since a leaf node in this chain has the label $n-t$. Each chain in subtree ${\\mathcal K}_i$ where $1 \\leq i \\leq m-1$ (except the last chain in ${\\mathcal K}_{m-1}$) contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it during pruning. Similarly, each of the chains ${\\mathcal C}_i$ with $0 \\leq i < p - 1$ contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it. The single leaf of ${\\mathcal K}_0$ also contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed when pruning ${\\mathcal C}_{p-1}$. Finally, the weight of initial leaf in $w(n-j)$ accounts for the single label removed from the leaf of ${\\mathcal K}_0$. Therefore, $d=n-s-w(n-j)$ and ${\\mathcal P} {\\mathcal K}(n)$ is same as ${\\mathcal K}(n-s-w(n-j))$.\n\nCase 2: assume that ${\\mathcal C}_p$ contains $t \\geq j$ labels. Again we consider the node with label $n-j$. In this case, this node is either the leaf of ${\\mathcal C}_{p-1}$ or a node (but not the leaf) of ${\\mathcal C}_p$. However, in both cases, $w(n-j)$ counts the weights of the same leaves. As before each chain in subtree ${\\mathcal K}_i$ where $1 \\leq i \\leq m-1$ (except the last chain in ${\\mathcal K}_{m-1}$) contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it during pruning. Each of the chains ${\\mathcal C}_i$ with $0 \\leq i \\leq p - 1$ contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it. In this case, we have also removed $j$ labels from ${\\mathcal C}_p$ while pruning ${\\mathcal K}(n)$ and the weight of the single leaf of ${\\mathcal K}_0$ contributes $j$ to $w(n-j)$ to account for this. Finally, the weight of initial leaf in $w(n-j)$ accounts for the single label removed from the leaf of ${\\mathcal K}_0$ and we have that $d=n-s-w(n-j)$.\n\nThe weight of the leaves of ${\\mathcal K}$ in ${\\mathcal P} {\\mathcal K}(n)$ differs by $\\lambda j$ from the weight of the leaves of ${\\mathcal K}$ in ${\\mathcal K}(n)$ since we have removed the leaf of ${\\mathcal K}_0$ and $\\lambda-1$ leaves of ${\\mathcal K}_1$. This together with the fact that ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(n-s-w(n-j))$ imply that $w(n) = w(n-s-w(n-j)) + \\lambda j$. This completes the proof of the lemma.\n\n\\end{proof}\n\n\\iffalse\nTheorem \\ref{thm:count} now follows from Lemma \\ref{lemma:prun} by induction.\nArmed with this lemma, we now prove theorem (\\ref{thm:count}).\n\n\\begin{proof}\n\nWe prove this theorem by induction on $n$.\n\nFirst note that $w_{j,s}(1)=\\ldots=w_{j,s}(s+1)=1$ since the only leaf with label less than $s+1$ is initial node. Also $w_{j,s}(s+2)=\\ldots=w_{j,s}(s+j+1)=j+1$ since now we count both initial node and the leaf of ${\\mathcal T}_0$ with weight $j$. Therefore, from initial conditions $g_{j,s}(n)=w_{j,s}(n)$ for $n \\leq s+j+1$.\n\nNow we let $n>s+j+1$ and we assume that for all $k<n$ we have $g_{j,s}(k)=w_{j,s}(k)$. Note that $n-s-g_{j,s}(n-j)=n-s-w_{j,s}(n-j) > 0 $ and by previous lemma $g_{j,s}(n) = g_{j,s}(n-s-g_{j,s}(n-j)) + j = w_{j,s}(n-s-w_{j,s}(n-j)) + j = w_{j,s}(n)$ as required.\n\n\\end{proof}\n\\fi\n\n\\section{Alternative trees and initial conditions} \\label{sec3}\n\nIn the preceding section we showed how to solve the recursion (\\ref{recur}) in the case where the initial conditions are derived from the tree ${\\mathcal K}$ and the leaf weighting scheme described there. It turns out that other trees and weighting schemes lead to a solution of (\\ref{recur}) but with different initial conditions that depend upon the tree. For example, consider the initial portion of the tree ${\\mathcal K}'$ in Figure \\ref{fig4}.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.35]{fig4.png}\n\\caption{Initial portion of an alternative tree ${\\mathcal K}'$} \\label{fig4}\n\\end{center}\n\\end{figure}\n\nIt is readily seen that ${\\mathcal K}'$ is another tree that corresponds to (\\ref{recur}) with $j=2$, $\\lambda=3$ and $s=4$. Note that there is no knot node in ${\\mathcal K}'$, but rather a ``tail\" node in each of the sub-trees that make it up (in Figure \\ref{fig4} these are the nodes 17, 34 and 57). Here the leaf weight sequence begins 1,1,1,1,1,3,3,3,3,3,3,5,5,7,7,7,9 \\ldots. It is readily seen that this sequence, like the one related to Figure \\ref{fig2}, consists of all the odd positive integers in order, but the frequencies with which these integers occur are different between the two sequences. Other tree constructions are also possible.\n\nWe can use the obvious generalization of the tree ${\\mathcal K}'$ for arbitrary parameters $j, \\lambda$ and $s$, together with the same approach discussed in Section \\ref{sec2}, to demonstrate the analogue of Theorem \\ref{thm:count} holds: if $g(n)=w'(n)$ for all $1\\leq n \\leq 3+\\lambda j + 2s$, then $g(n)= w'(n)$ for all $n$, where $w'(n)$ is the leaf weight sequence for the tree ${\\mathcal K}'$.\n\nFor the same choice of the parameters it is not hard to show, as we saw in the example above, that the members of the leaf weight sequences related to ${\\mathcal K}$ and ${\\mathcal K}'$ respectively are the same, although in general they appear with different frequencies. In the special case $\\lambda=1$ the trees ${\\mathcal K}$ and ${\\mathcal K}'$ are the same, so the initial conditions and thus the leaf weight sequences generated by recursion (\\ref{recur}) must match. In the next section we derive formulas related to the leaf weight sequence in this case.\n\n\\iffalse\non Figure \\ref{fig4}. This construction and proofs similar to the ones given in Section \\ref{sec2} hold in general and we obtain alternative combinatorial interpretation of the recursion (\\ref{recur}).\n\nIt is possible use recursion \\ref{recur} to generate sequences that also have completely different members. For instance, $g(n)$ with $j=2$,$\\lambda=3$ and $s=4$ and initial conditions $g(1)=\\ldots=g(3)=1$, $g(4)=\\ldots=g(7)=6$ and $g(8)=\\ldots=g(14)=10$ generates a sequence $1,1,1,6,6,6,6,10,10,10,10,10,10,10,7,7,7,12,16,16,12,7,7,16,16,13,12\\ldots$. Not only this sequence contains even numbers (unlike all the other examples we have seen so far for this parameter set), but it is also non monotone.\t\n\n\\fi\n\n\\section{Closed-forms when $\\lambda = 1$} \\label{sec4}\n\nFor arbitrary $j>0, s\\geq 0$ and $\\lambda=1$, the tree ${\\mathcal K}$ of Section \\ref{sec2} can be described as follows: it consists of an infinite sequence of sub-trees ${\\mathcal K}_i, i \\geq 0$, where for $i>0$ each ${\\mathcal K}_i$ is a chain of length $ij+2$ with root at the $i^{th}$ supernode and with $s+ij+1$ labels. We refer to the initial leaf of ${\\mathcal K}$ as zeroth leaf. We call the only other leaf in ${\\mathcal K}_0$ the first leaf of ${\\mathcal K}$, while for $i>0$ the single leaf of ${\\mathcal K}_i$ is the $(i+1)^{th}$ leaf of ${\\mathcal K}$. In this section we derive closed forms for the leaf weight sequence sequence and its frequency function that generalize the results in \\cite{Golomb1990} for the sequence $g_{1,0,1}(n)$. We begin with the frequency function.\n\n\\begin{theorem}\nThe recursion (\\ref{recur}) with parameters $j,s,\\lambda=1$ and initial conditions as in Theorem \\ref{thm:count} generates a sequence $g(n)=g_{j,s,1}(n)$ with frequency function\n", "file": "1202.0276.tex", "index": 5, "pos": 4174, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"g_{1,0,1}(n)=\\left\\lfloor\\frac{\\left\\lfloor\\sqrt{8n}\\right\\rfloor+1}{2}\\right\\rfloor\" display=\"block\"><mrow><mrow><msub><mi>g</mi><mrow><mn>1</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>\u230a</mo><mfrac><mrow><mrow><mo>\u230a</mo><msqrt><mrow><mn>8</mn><mo>\u2062</mo><mi>n</mi></mrow></msqrt><mo>\u230b</mo></mrow><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>\u230b</mo></mrow></mrow></math>"}, {"text": "\\begin{align*}\n\\phi(n) =\n\\begin{cases}\nn+s, \\text{  } n \\equiv 1 \\bmod{j} \\\\\n0, \\text{  otherwise}\n\\end{cases}\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": ".\n\nSecond, one of us chanced upon the following natural related question: find a closed form for the general term in the sequence 1, 3, 3, 3, 5, 5, 5, 5, 5, \\ldots where each odd natural number $2m+1$ appears $2m+1$ times. This non-slow, monotone sequence appears in \\cite{sna} as entry A001650, where it is noted that it is generated by the ``Golomb-like\" recursion coinciding with (\\ref{recur}) with $j=2, s=0$, and $\\lambda = 1$ and initial conditions 1, 3, 3. From there we successively generalized the form of the nested recursion along the lines of (\\ref{recursion}) to yield (\\ref{recur}), while simultaneously developing appropriate analogues for the initial conditions of interest (more details are provided on these in Section \\ref{sec2}).\n\n\\iffalse\n; concurrently, as we soon show, we identified that the initial conditions of interest consist of $s+1$ 1s followed by $j$ repetitions of the value $j+1$.\n\nThe natural generalization of Golomb's recursion with $j=\\lambda=1$ but any $s \\geq 0$ and $s+1$ initial values all equal to 1 is discussed briefly in \\cite{Rpaper} and \\cite{NonHomog}. There it is observed that the solution has a combinatorial interpretation in terms of counting leaves in a certain infinite unary tree, so is slow, and has frequency function $\\phi(n) = n + s$. For instance, $g_{1,2}(n)$ generates the sequence 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, \\ldots.\n\nBased on our extensive experience with such recursions, it seemed natural to consider using a string of 1s of sufficient length to ensure that the recursion stayed defined (see \\cite{BKT, CCT, Rpaper} for various examples of nested recursions with such initial conditions providing interesting results). Very quickly we identified\n\n\\fi\n\nFinally, recursion (\\ref{recur}) occurs naturally in the context of our analysis in \\cite{NonHomog} for the case $k=1$, where it follows immediately from the formula for $\\nu$ (see \\cite{NonHomog}, p. 6) that with $k=1$ a tree-based slow solution can only exist if $\\nu$ is a positive multiple of $j$ \\footnote{In fact, this is true for the even more general tree-grafting methodology described in \\cite{NonHomog}, Section 4. We are indebted to Mustazee Rahman for pointing this out.}. Here we solve this recursion with very different initial conditions from those in \\cite{NonHomog}, in particular, they are not slow.\n\nThe outline of the rest of the paper is as follows. In the next section we show how to extend the tree-based solution methodology in \\cite{NonHomog} to derive a non-slow solution to (\\ref{recur}) with specified initial conditions. In Section \\ref{sec3} we illustrate how more than one such tree interpretation is possible, leading to different choices of the initial conditions and alternative solutions that are closely related. In the case $\\lambda=1$ the initial conditions for these alternative tree interpretations coincide, so we conclude in Section \\ref{sec4} by deriving explicit closed forms for the solution sequence and its frequency function in this case.\n\n\\section{Combinatorial interpretation of the generalized Golomb triangular recursion} \\label{sec2}\n\nIn this section we give a combinatorial interpretation of the sequence generated by (\\ref{recur}); more precisely, we show how this sequence gives a weighted count of the leaves of the labeled infinite tree ${\\mathcal K}$ which we construct now. Fix integers $j,\\lambda > 0$ and $s \\geq 0$, which will correspond to the desired parameters of the recursion. For ease of reference, in what follows we write $g(n)$ in place of $g_{j,s,\\lambda}(n)$ where there is no confusion.\n\nOur approach closely resembles that of \\cite{NonHomog}. There are two key steps in our construction. First we construct the nodes and edges that form the skeleton of ${\\mathcal K}$. Then we insert the consecutive positive integers that are the labels in the nodes of ${\\mathcal K}$. To do this, first we must specify the order in which the nodes of ${\\mathcal K}$ are to be traversed one at a time; then we insert the appropriate number of labels (either $1$ or $s$) in each node. To help describe this construction, we illustrate our discussion for the case $j=2$, $\\lambda=3$ and $s=4$.\n\n\\subsection*{Constructing the skeleton of ${\\mathcal K}$}\nThe skeleton of ${\\mathcal K}$ consists of an infinite sequence ${\\mathcal K}_i, i \\geq 0$ of rooted, finite subtrees of ${\\mathcal K}$ that we connect together to form ${\\mathcal K}$.\n\nWe define ${\\mathcal K}_0$ to be a chain consisting of two nodes connected by a single edge; we call this a chain of length $2$. We take one of the nodes to be the root of ${\\mathcal K}_0$ while the other node at the end of the chain is a leaf. We form subtree ${\\mathcal K}_1$ as follows: take a copy of ${\\mathcal K}_0$ and attach exactly $\\lambda$ chains with $j$ nodes (``length $j$\") to the leaf node. Note that ${\\mathcal K}_1$ has $\\lambda$ leaves. For $i > 1$ we construct the subtree ${\\mathcal K}_i$ in an analogous way: take a copy of ${\\mathcal K}_{i-1}$ and attach a chain of length $j$ to each of its $\\lambda$ leaves. For each $i$, we refer to the root of ${\\mathcal K}_i$ as the $i^{th}$ \\textbf{supernode} of ${\\mathcal K}$. The single node connected to the $i^{th}$ supernode is called $i^{th}$ \\textbf{knot node}, while all other nodes of ${\\mathcal K}_i$ are \\textbf{regular nodes}. Note that in every ${\\mathcal K}_i, i \\geq 1$ the regular nodes at the end of each of the $\\lambda$ chains are leaves.\n\nNext, for all $i \\geq 0$ we connect the subtree ${\\mathcal K}_i$ to ${\\mathcal K}_{i+1}$ by adding an edge from the $i^{th}$ supernode to the $(i+1)^{th}$. To complete the construction of ${\\mathcal K}$ we attach an extra regular node as a child of the first supernode in ${\\mathcal K}_0$. We call this additional regular node the \\textbf{initial leaf of ${\\mathcal K}$}. See Figure \\ref{fig1} for the construction of ${\\mathcal K}$ for the case $j=2$, $\\lambda=3$ and $s=4$; note that supernodes are marked by rectangles.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.35]{fig1.png}\n\\caption{The initial portion of the skeleton of ${\\mathcal K}$} \\label{fig1}\n\\end{center}\n\\end{figure}\n\n\\subsection*{Labeling ${\\mathcal K}$}\nWe insert one label into each regular node of ${\\mathcal K}$ and $s$ labels into each supernode. The labels consist of successive integers starting at 1. Before we can insert these labels we must specify the traversal order of the nodes in ${\\mathcal K}$. We recursively define a \\textbf{pre-order} traversal as follows: ${\\mathcal K}_0$ is traversed by beginning at the initial leaf followed by the supernode itself and then to the remaining leaf. Having traversed ${\\mathcal K}_i$ for $i \\geq 0$, the subtree ${\\mathcal K}_{i+1}$ is traversed next by starting at the $(i+1)^{th}$ supernode, then continuing to the knot node immediately below it, and then traversing the length of each of the $\\lambda$ chains from left to right. See Figure \\ref{fig2} for the labeling in case $j=2$, $\\lambda=3$ and $s=4$.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.35]{fig2.png}\n\\caption{Labeling the initial portion of the skeleton of ${\\mathcal K}$} \\label{fig2}\n\\end{center}\n\\end{figure}\n\nLet ${\\mathcal K}(n)$ be the subtree of ${\\mathcal K}$ consisting of all the nodes of ${\\mathcal K}$ with label(s) less than or equal to $n$. Observe that by definition ${\\mathcal K}(n)$ necessarily consists of all the labeled nodes and edges in some finite number of subtrees ${\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}_{m-1}$ of ${\\mathcal K}$, together with the subtree ${\\mathcal K}^*_m$ which consists of a portion (including possibly all) of the subtree ${\\mathcal K}_m$. For compactness we write ${\\mathcal K}(n) = {\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}_{m-1}, {\\mathcal K}^*_m$. If ${\\mathcal K}^*_m$ is not all of ${\\mathcal K}_m$ then it has fewer than $\\lambda$ chains attached to its knot node and/or one of these chains has fewer than $mj$ nodes; in this case we call the subtree ${\\mathcal K}^*_m$ \\textbf{incomplete}.\n\nWe assign a weight of $1$ to the initial leaf of ${\\mathcal K}$ while the rest of the leaves receive the weight $j$. Define the \\textbf{leaf weight sequence} $w_{j,s,\\lambda}(n)$ whose $n^{th}$ member equals the sum of the weights of the leaves of ${\\mathcal K}$ that are in ${\\mathcal K}(n)$. In other words, $w_{j,s,\\lambda}(n)$ is the total weight of the leaves of ${\\mathcal K}$ with label less than or equal to $n$; in Figure \\ref{fig2} $w_{2,3,4}(n)$ begins 1,1,1,1,1,3,3,3,3,3,3,3,5,5,7,7,9,9,9,9,9,9,9,9,9,11, \\ldots. \\footnote{Observe that for $j=2, s=0, \\lambda=1$ the leaf weight sequence of ${\\mathcal K}$ is just the sequence 1,3,3,3,5,5,5,5,5, \\ldots discussed in Section \\ref{sec1}.} Where there is no confusion we write $w(n)=w_{j,s,\\lambda}(n)$.\n\nOne needs to be careful to distinguish leaves of ${\\mathcal K}$ from leaves of ${\\mathcal K}(n)$. In particular, not all leaves of ${\\mathcal K}(n)$ are leaves of ${\\mathcal K}$. For example, in Figure \\ref{fig2}, the node containing the label 52 is a leaf of ${\\mathcal K}(52)$ but not of ${\\mathcal K}$.\n\nNow we are ready to state our main result on the combinatorial interpretation of the integer sequence generated by $g(n)$.\n\n\\begin{theorem} The leaf weight sequence $w(n)$ is the solution generated by the recursion (\\ref{recur}) with initial conditions $g(n)= w(n)$ for $1\\leq n \\leq 3 +2s + \\lambda j$. That is, if $g(n)=w(n)$ for $1\\leq n \\leq 3 +2s + \\lambda j$ then $g(n)=w(n)$ for each positive integer $n$.\n\\label{thm:count}\n\\end{theorem}\n\nThe key to proving Theorem \\ref{thm:count} lies with the pruning operation ${\\mathcal P}$ on ${\\mathcal K}(n) = {\\mathcal K}_0$, ${\\mathcal K}_1$, $\\ldots$, ${\\mathcal K}_{m-1}$, ${\\mathcal K}^*_m$ which yields a new tree ${\\mathcal P}{\\mathcal K}(n)$ defined as follows: first disconnect the initial leaf from ${\\mathcal K}_0$ and remove the rest of ${\\mathcal K}_0$ (together with its labels) from the tree. Next, for $1 \\leq i < m$, delete the $j$ largest labels along with the nodes that contain them from each chain connected to $i^{th}$ knot node in ${\\mathcal K}_i$. From the construction of ${\\mathcal K}$ it follows that doing so turns each ${\\mathcal K}_i$ into ${\\mathcal K}_{i-1}$, $1 \\leq i < m$.\n\nNow we turn our attention to ${\\mathcal K}^*_m$. There are three cases: (1) if ${\\mathcal K}^*_m$ has at least $2$ chains connected to its knot node, then delete the $j$ largest labels and the nodes that contain these labels from each chain with at least $j$ labels; (2) if ${\\mathcal K}^*_m$ has fewer than 2 chains but has at least $j$ labels in total, then delete the largest $j$ labels and all the nodes that become unlabeled as a result; (3) finally, if ${\\mathcal K}^*_m$ has fewer than $j$ labels, then don't do anything. In all cases, note that the pruning operation turns ${\\mathcal K}^*_m$ into ${\\mathcal K}^*_{m-1}$, some portion of ${\\mathcal K}_{m-1}$.\n\nFinally, we reconnect the initial leaf to the supernode of the subtree that started initially (before any pruning took place) as ${\\mathcal K}_1$ and relabel the resulting tree in pre-order as defined above. It follows that ${\\mathcal P} {\\mathcal K}(n)$ consists of the finite sequence of subtrees of ${\\mathcal K}$: ${\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}^*_{m-1}$ and it must be the case that, after relabeling, ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(d)$ for some $d<n$. See Figure \\ref{fig3} where we illustrate this for the pruning of ${\\mathcal K}(52)$, which becomes the subtree ${\\mathcal K}(31)$.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.25]{fig3.png}\n\\caption{Pruning ${\\mathcal K}(52)$} \\label{fig3}\n\\end{center}\n\\end{figure}\n\nWe now show the relation between $n$ and $d$ for any pruned subtree, from which Theorem \\ref{thm:count} is immediate by a simple induction argument.\n\n\\begin{lemma}\nFor $n > 3+2s+\\lambda j$, ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(n-s-w(n-j))$ and consequently $w(n) = w(n-s-w(n-j)) + \\lambda j$.\n\\label{lemma:prun}\n\\end{lemma}\n\\begin{proof}\nFix $n > 3+2s+\\lambda j$. Let ${\\mathcal K}(n) ={\\mathcal K}_0, {\\mathcal K}_1, \\ldots {\\mathcal K}_{m-1}, {\\mathcal K}^*_m$. Since $n> 3+2s+\\lambda j$ and $3+2s+\\lambda j$ is the total number of labels contained in ${\\mathcal K}_0$ and ${\\mathcal K}_1$, it follows that $m > 1$.\n\nAs we noted above, it must be the case that after relabeling ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(d)$ for some $d<n$. It suffices to show that $d=n-s-w(n-j)$, that is, we need to show that the total number of labels removed from the tree during the pruning operation is $s+w(n-j)$. By deleting the supernode of ${\\mathcal K}_0$ we removed $s$ labels. Thus we must show that the number of labels removed from ${\\mathcal K}_1, \\ldots, {\\mathcal K}_{m-1}, {\\mathcal K}^*_m$ plus the one label removed by deleting the leaf of ${\\mathcal K}_0$ together sum up to $w(n-j)$.\n\nNote that since ${\\mathcal K}_{m-1}$ is complete it has $\\lambda$ chains of length $\\geq j$ attached to its knot node. Denote the chain with the largest label in ${\\mathcal K}_{m-1}$ by ${\\mathcal C}_0$. Suppose ${\\mathcal K}^*_m$ contains the $m^{th}$ knot node and there are at least 2 chains connected to it. Denote these chains in ${\\mathcal K}^*_m$ by ${\\mathcal C}_1, \\ldots, {\\mathcal C}_p$ where $ 2 \\leq p \\leq \\lambda$. Otherwise, as we discussed above, we consider ${\\mathcal K}^*_m$ itself as a chain, which we call ${\\mathcal C}_1$. In either case, we know that the node with label $n$ lies in the chain ${\\mathcal C}_p$ where $1 \\leq p \\leq \\lambda$. We consider two cases.\n\nCase 1: assume that ${\\mathcal C}_p$ contains $t<j$ labels. Consider the node with label $n-j>(\\lambda-1)j+2s+3>1$ in ${\\mathcal K}(n)$. Since ${\\mathcal C}_p$ has less than $j$ labels and the chain ${\\mathcal C}_{p-1}$ has at least $j$ labels we know that the node with label $n-j$ lies in ${\\mathcal C}_{p-1}$. Moreover, it is not a leaf node of ${\\mathcal K}$ since a leaf node in this chain has the label $n-t$. Each chain in subtree ${\\mathcal K}_i$ where $1 \\leq i \\leq m-1$ (except the last chain in ${\\mathcal K}_{m-1}$) contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it during pruning. Similarly, each of the chains ${\\mathcal C}_i$ with $0 \\leq i < p - 1$ contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it. The single leaf of ${\\mathcal K}_0$ also contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed when pruning ${\\mathcal C}_{p-1}$. Finally, the weight of initial leaf in $w(n-j)$ accounts for the single label removed from the leaf of ${\\mathcal K}_0$. Therefore, $d=n-s-w(n-j)$ and ${\\mathcal P} {\\mathcal K}(n)$ is same as ${\\mathcal K}(n-s-w(n-j))$.\n\nCase 2: assume that ${\\mathcal C}_p$ contains $t \\geq j$ labels. Again we consider the node with label $n-j$. In this case, this node is either the leaf of ${\\mathcal C}_{p-1}$ or a node (but not the leaf) of ${\\mathcal C}_p$. However, in both cases, $w(n-j)$ counts the weights of the same leaves. As before each chain in subtree ${\\mathcal K}_i$ where $1 \\leq i \\leq m-1$ (except the last chain in ${\\mathcal K}_{m-1}$) contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it during pruning. Each of the chains ${\\mathcal C}_i$ with $0 \\leq i \\leq p - 1$ contributes $j$ to $w(n-j)$ which accounts for $j$ labels removed from it. In this case, we have also removed $j$ labels from ${\\mathcal C}_p$ while pruning ${\\mathcal K}(n)$ and the weight of the single leaf of ${\\mathcal K}_0$ contributes $j$ to $w(n-j)$ to account for this. Finally, the weight of initial leaf in $w(n-j)$ accounts for the single label removed from the leaf of ${\\mathcal K}_0$ and we have that $d=n-s-w(n-j)$.\n\nThe weight of the leaves of ${\\mathcal K}$ in ${\\mathcal P} {\\mathcal K}(n)$ differs by $\\lambda j$ from the weight of the leaves of ${\\mathcal K}$ in ${\\mathcal K}(n)$ since we have removed the leaf of ${\\mathcal K}_0$ and $\\lambda-1$ leaves of ${\\mathcal K}_1$. This together with the fact that ${\\mathcal P} {\\mathcal K}(n) = {\\mathcal K}(n-s-w(n-j))$ imply that $w(n) = w(n-s-w(n-j)) + \\lambda j$. This completes the proof of the lemma.\n\n\\end{proof}\n\n\\iffalse\nTheorem \\ref{thm:count} now follows from Lemma \\ref{lemma:prun} by induction.\nArmed with this lemma, we now prove theorem (\\ref{thm:count}).\n\n\\begin{proof}\n\nWe prove this theorem by induction on $n$.\n\nFirst note that $w_{j,s}(1)=\\ldots=w_{j,s}(s+1)=1$ since the only leaf with label less than $s+1$ is initial node. Also $w_{j,s}(s+2)=\\ldots=w_{j,s}(s+j+1)=j+1$ since now we count both initial node and the leaf of ${\\mathcal T}_0$ with weight $j$. Therefore, from initial conditions $g_{j,s}(n)=w_{j,s}(n)$ for $n \\leq s+j+1$.\n\nNow we let $n>s+j+1$ and we assume that for all $k<n$ we have $g_{j,s}(k)=w_{j,s}(k)$. Note that $n-s-g_{j,s}(n-j)=n-s-w_{j,s}(n-j) > 0 $ and by previous lemma $g_{j,s}(n) = g_{j,s}(n-s-g_{j,s}(n-j)) + j = w_{j,s}(n-s-w_{j,s}(n-j)) + j = w_{j,s}(n)$ as required.\n\n\\end{proof}\n\\fi\n\n\\section{Alternative trees and initial conditions} \\label{sec3}\n\nIn the preceding section we showed how to solve the recursion (\\ref{recur}) in the case where the initial conditions are derived from the tree ${\\mathcal K}$ and the leaf weighting scheme described there. It turns out that other trees and weighting schemes lead to a solution of (\\ref{recur}) but with different initial conditions that depend upon the tree. For example, consider the initial portion of the tree ${\\mathcal K}'$ in Figure \\ref{fig4}.\n\n\\begin{figure}[htpb]\n\\begin{center}\n\\includegraphics[scale=0.35]{fig4.png}\n\\caption{Initial portion of an alternative tree ${\\mathcal K}'$} \\label{fig4}\n\\end{center}\n\\end{figure}\n\nIt is readily seen that ${\\mathcal K}'$ is another tree that corresponds to (\\ref{recur}) with $j=2$, $\\lambda=3$ and $s=4$. Note that there is no knot node in ${\\mathcal K}'$, but rather a ``tail\" node in each of the sub-trees that make it up (in Figure \\ref{fig4} these are the nodes 17, 34 and 57). Here the leaf weight sequence begins 1,1,1,1,1,3,3,3,3,3,3,5,5,7,7,7,9 \\ldots. It is readily seen that this sequence, like the one related to Figure \\ref{fig2}, consists of all the odd positive integers in order, but the frequencies with which these integers occur are different between the two sequences. Other tree constructions are also possible.\n\nWe can use the obvious generalization of the tree ${\\mathcal K}'$ for arbitrary parameters $j, \\lambda$ and $s$, together with the same approach discussed in Section \\ref{sec2}, to demonstrate the analogue of Theorem \\ref{thm:count} holds: if $g(n)=w'(n)$ for all $1\\leq n \\leq 3+\\lambda j + 2s$, then $g(n)= w'(n)$ for all $n$, where $w'(n)$ is the leaf weight sequence for the tree ${\\mathcal K}'$.\n\nFor the same choice of the parameters it is not hard to show, as we saw in the example above, that the members of the leaf weight sequences related to ${\\mathcal K}$ and ${\\mathcal K}'$ respectively are the same, although in general they appear with different frequencies. In the special case $\\lambda=1$ the trees ${\\mathcal K}$ and ${\\mathcal K}'$ are the same, so the initial conditions and thus the leaf weight sequences generated by recursion (\\ref{recur}) must match. In the next section we derive formulas related to the leaf weight sequence in this case.\n\n\\iffalse\non Figure \\ref{fig4}. This construction and proofs similar to the ones given in Section \\ref{sec2} hold in general and we obtain alternative combinatorial interpretation of the recursion (\\ref{recur}).\n\nIt is possible use recursion \\ref{recur} to generate sequences that also have completely different members. For instance, $g(n)$ with $j=2$,$\\lambda=3$ and $s=4$ and initial conditions $g(1)=\\ldots=g(3)=1$, $g(4)=\\ldots=g(7)=6$ and $g(8)=\\ldots=g(14)=10$ generates a sequence $1,1,1,6,6,6,6,10,10,10,10,10,10,10,7,7,7,12,16,16,12,7,7,16,16,13,12\\ldots$. Not only this sequence contains even numbers (unlike all the other examples we have seen so far for this parameter set), but it is also non monotone.\t\n\n\\fi\n\n\\section{Closed-forms when $\\lambda = 1$} \\label{sec4}\n\nFor arbitrary $j>0, s\\geq 0$ and $\\lambda=1$, the tree ${\\mathcal K}$ of Section \\ref{sec2} can be described as follows: it consists of an infinite sequence of sub-trees ${\\mathcal K}_i, i \\geq 0$, where for $i>0$ each ${\\mathcal K}_i$ is a chain of length $ij+2$ with root at the $i^{th}$ supernode and with $s+ij+1$ labels. We refer to the initial leaf of ${\\mathcal K}$ as zeroth leaf. We call the only other leaf in ${\\mathcal K}_0$ the first leaf of ${\\mathcal K}$, while for $i>0$ the single leaf of ${\\mathcal K}_i$ is the $(i+1)^{th}$ leaf of ${\\mathcal K}$. In this section we derive closed forms for the leaf weight sequence sequence and its frequency function that generalize the results in \\cite{Golomb1990} for the sequence $g_{1,0,1}(n)$. We begin with the frequency function.\n\n\\begin{theorem}\nThe recursion (\\ref{recur}) with parameters $j,s,\\lambda=1$ and initial conditions as in Theorem \\ref{thm:count} generates a sequence $g(n)=g_{j,s,1}(n)$ with frequency function\n", "nexttext": "\n\\label{thm:freq}\n\\end{theorem}\n\n\\begin{proof}\nBy Theorem \\ref{thm:count} $g(n)=w(n)$, so it is enough to prove this statement for $w(n)$. Let $d$ be the label of the $m^{th}$ leaf in ${\\mathcal K}$. If $m=0$ then $d=1$ and thus $w(d)=1=mj+1$. If $m\\geq 1$, then $w(d)$ is the sum of the weights of the leaves of ${\\mathcal K}$ in ${\\mathcal K}_0, \\ldots, {\\mathcal K}_{m-1}$. Since each of these chains has a single leaf of weight $j$ and ${\\mathcal K}_0$ also has an initial leaf with weight $1$, we have $w(d)=mj+1$.\n\nIf $t$ is the label of the $(m+1)^{th}$ leaf, then $w(n)=mj+1$ for $1<d\\leq n < t$. By the construction of ${\\mathcal K}$ there are exactly $s+mj+1$ labels $n$ such that $d\\leq n < t$ (one leaf label $d$ and $s+mj$ labels in ${\\mathcal K}_m$). Therefore, if $q \\equiv 1 \\bmod{j}$ then $q$ is repeated at least $q+s$ times in the sequence $w(n)$. But the sequence $w(n)$ is non-decreasing and $w(d-1)=(m-1)j+1$ (if $d>1$) and $w(t)=mj+j+1$. Thus we conclude that if $q \\equiv 1 \\bmod{j}$ then $q$ is repeated exactly $q+s$ times. This argument also shows that $w(n)\\equiv 1 \\bmod{j}$ for all $n>0$ and if $q \\not\\equiv 1 \\bmod{j}$ then $\\phi(q)=0$ which completes the proof.\n\\end{proof}\n\nTheorem \\ref{thm:freq} shows that for $j>0$, $s \\geq 0$ and $\\lambda=1$ recursion (\\ref{recur}) generates the sequence $1^{s+1}, (j+1)^{s+j+1}, (2j+1)^{s+2j+1}, \\ldots$, where $(mj+1)^{s+mj+1}$ means that the value $mj+1$ is repeated $s+mj+1$ times. For $j=1$ and $s=0$ this is the sequence is 1,2,2,3,3,3, \\ldots with frequency function $\\phi(n)=n$ discussed in \\cite{Golomb1990}.\n\nNext we generalize (\\ref{closed}) by deriving a closed form solution for $g_{j,s,1}(n)$.\n\n\\begin{theorem}\nLet $p_m = 1+\\sum\\limits_{i=0}^m(s+ij+1)$ and $F(n) = max\\{p_m : p_m \\leq n, \\text{  } 0 \\leq m \\} \\cup \\{1\\}$. Then for all positive integers $n$\n", "file": "1202.0276.tex", "index": 7, "pos": 25431, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\phi(n)=\\begin{cases}n+s,\\text{ }n\\equiv 1\\bmod{j}\\\\&#10;0,\\text{ otherwise}\\end{cases}\" display=\"inline\"><mrow><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><mrow><mrow><mi>n</mi><mo>+</mo><mi>s</mi></mrow><mo>,</mo><mrow><mtext>\u00a0</mtext><mo>\u2062</mo><mi>n</mi></mrow></mrow><mo>\u2261</mo><mrow><mn>1</mn><mo lspace=\"2.5pt\" rspace=\"2.5pt\">mod</mo><mi>j</mi></mrow></mrow></mtd><mtd/></mtr><mtr><mtd columnalign=\"left\"><mrow><mn>0</mn><mo>,</mo><mtext>\u00a0otherwise</mtext></mrow></mtd><mtd/></mtr></mtable></mrow></mrow></math>"}, {"text": "\\begin{align*}\ng_{j,s,1}(n) = \\frac{(j-2s) + \\sqrt{(2s-j)^2 + 4(2jF(n) + 2s + 1 - 3j)}}{2}.\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\\label{thm:freq}\n\\end{theorem}\n\n\\begin{proof}\nBy Theorem \\ref{thm:count} $g(n)=w(n)$, so it is enough to prove this statement for $w(n)$. Let $d$ be the label of the $m^{th}$ leaf in ${\\mathcal K}$. If $m=0$ then $d=1$ and thus $w(d)=1=mj+1$. If $m\\geq 1$, then $w(d)$ is the sum of the weights of the leaves of ${\\mathcal K}$ in ${\\mathcal K}_0, \\ldots, {\\mathcal K}_{m-1}$. Since each of these chains has a single leaf of weight $j$ and ${\\mathcal K}_0$ also has an initial leaf with weight $1$, we have $w(d)=mj+1$.\n\nIf $t$ is the label of the $(m+1)^{th}$ leaf, then $w(n)=mj+1$ for $1<d\\leq n < t$. By the construction of ${\\mathcal K}$ there are exactly $s+mj+1$ labels $n$ such that $d\\leq n < t$ (one leaf label $d$ and $s+mj$ labels in ${\\mathcal K}_m$). Therefore, if $q \\equiv 1 \\bmod{j}$ then $q$ is repeated at least $q+s$ times in the sequence $w(n)$. But the sequence $w(n)$ is non-decreasing and $w(d-1)=(m-1)j+1$ (if $d>1$) and $w(t)=mj+j+1$. Thus we conclude that if $q \\equiv 1 \\bmod{j}$ then $q$ is repeated exactly $q+s$ times. This argument also shows that $w(n)\\equiv 1 \\bmod{j}$ for all $n>0$ and if $q \\not\\equiv 1 \\bmod{j}$ then $\\phi(q)=0$ which completes the proof.\n\\end{proof}\n\nTheorem \\ref{thm:freq} shows that for $j>0$, $s \\geq 0$ and $\\lambda=1$ recursion (\\ref{recur}) generates the sequence $1^{s+1}, (j+1)^{s+j+1}, (2j+1)^{s+2j+1}, \\ldots$, where $(mj+1)^{s+mj+1}$ means that the value $mj+1$ is repeated $s+mj+1$ times. For $j=1$ and $s=0$ this is the sequence is 1,2,2,3,3,3, \\ldots with frequency function $\\phi(n)=n$ discussed in \\cite{Golomb1990}.\n\nNext we generalize (\\ref{closed}) by deriving a closed form solution for $g_{j,s,1}(n)$.\n\n\\begin{theorem}\nLet $p_m = 1+\\sum\\limits_{i=0}^m(s+ij+1)$ and $F(n) = max\\{p_m : p_m \\leq n, \\text{  } 0 \\leq m \\} \\cup \\{1\\}$. Then for all positive integers $n$\n", "nexttext": "\n\\label{thm:closed}\n\\end{theorem}\n\n\\begin{proof}\nTo begin, observe that $F(n)$ is the label of the last leaf of ${\\mathcal K}(n)$. We prove the formula in two steps. First we show that it holds when $n$ is a leaf label. Then we extend this formula to apply to all other natural numbers $n$.\n\nWhen $n=1$ it is the label of the $0^{th}$ leaf. But then $F(1) = 1$ so the right hand side of the formula in the statement of the theorem simplifies to $1$ as required.\n\nNext assume that $n$ is the label of the $(m+1)^{th}$ leaf in ${\\mathcal K}$, so is the leaf label of subtree ${\\mathcal K}_m$. Each of ${\\mathcal K}_0, \\ldots, {\\mathcal K}_m$ contain $s+ij+1$, $0\\leq i \\leq m$ labels, while there is one extra label in the initial leaf. This implies that $(m+1)^{th}$ leaf has label $n=1+\\sum_{i=0}^m (s+ij+1) = p_m$. But from the proof of Theorem \\ref{thm:freq} we have that $g(n) = (m+1)j+1$ if $n$ is the label of the $(m+1)^{st}$ leaf in ${\\mathcal K}$. We combine these two observations to derive a closed formula for $g(n)$ for such $n$.\n\nExpanding the sum for $n$ we get $n = 1+(m+1)s + \\frac{j(m+1)m}{2} + (m+1)$. Multiplying both sides by $j$ and rewriting the result suggestively yields $jn = j(m+1)s + s - s + \\frac{(j(m+1)+1-1)(jm+j+1-j-1)}{2} + j(m+1) + 1+j-1$, which is just $jn = sg(n) - s + \\frac{(g(n)-1)(g(n)-j-1)}{2} + g(n)+j-1$. Therefore, we have the quadratic equation $g^2(n) + (2s-j)g(n) + (3j-2s-1-2jn) = 0$, which we solve for $g(n)$ in terms of $n$. To do so we need the discriminant of the quadratic $D = (2s-j)^2 + 4(j(2n-3)+2s+1) \\geq 0$. But this inequality holds for $n \\geq 2$ since all the parameters are non-negative integers. The positive root of the quadratic equation is\n\n", "file": "1202.0276.tex", "index": 9, "pos": 27398, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle g_{j,s,1}(n)=\\frac{(j-2s)+\\sqrt{(2s-j)^{2}+4(2jF(n)+2s+1-3j)}}{2}.\" display=\"inline\"><mrow><mrow><mrow><msub><mi>g</mi><mrow><mi>j</mi><mo>,</mo><mi>s</mi><mo>,</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>j</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><msqrt><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow><mo>-</mo><mi>j</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mrow><mn>4</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi><mo>\u2062</mo><mi>F</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>-</mo><mrow><mn>3</mn><mo>\u2062</mo><mi>j</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></msqrt></mrow><mn>2</mn></mfrac></mstyle></mrow><mo>.</mo></mrow></math>"}, {"text": "\\begin{align*}\ng(n) = \\frac{(j-2s) + \\sqrt{(2s-j)^2 + 4(2jn + 2s + 1 - 3j)}}{2}\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\\label{thm:closed}\n\\end{theorem}\n\n\\begin{proof}\nTo begin, observe that $F(n)$ is the label of the last leaf of ${\\mathcal K}(n)$. We prove the formula in two steps. First we show that it holds when $n$ is a leaf label. Then we extend this formula to apply to all other natural numbers $n$.\n\nWhen $n=1$ it is the label of the $0^{th}$ leaf. But then $F(1) = 1$ so the right hand side of the formula in the statement of the theorem simplifies to $1$ as required.\n\nNext assume that $n$ is the label of the $(m+1)^{th}$ leaf in ${\\mathcal K}$, so is the leaf label of subtree ${\\mathcal K}_m$. Each of ${\\mathcal K}_0, \\ldots, {\\mathcal K}_m$ contain $s+ij+1$, $0\\leq i \\leq m$ labels, while there is one extra label in the initial leaf. This implies that $(m+1)^{th}$ leaf has label $n=1+\\sum_{i=0}^m (s+ij+1) = p_m$. But from the proof of Theorem \\ref{thm:freq} we have that $g(n) = (m+1)j+1$ if $n$ is the label of the $(m+1)^{st}$ leaf in ${\\mathcal K}$. We combine these two observations to derive a closed formula for $g(n)$ for such $n$.\n\nExpanding the sum for $n$ we get $n = 1+(m+1)s + \\frac{j(m+1)m}{2} + (m+1)$. Multiplying both sides by $j$ and rewriting the result suggestively yields $jn = j(m+1)s + s - s + \\frac{(j(m+1)+1-1)(jm+j+1-j-1)}{2} + j(m+1) + 1+j-1$, which is just $jn = sg(n) - s + \\frac{(g(n)-1)(g(n)-j-1)}{2} + g(n)+j-1$. Therefore, we have the quadratic equation $g^2(n) + (2s-j)g(n) + (3j-2s-1-2jn) = 0$, which we solve for $g(n)$ in terms of $n$. To do so we need the discriminant of the quadratic $D = (2s-j)^2 + 4(j(2n-3)+2s+1) \\geq 0$. But this inequality holds for $n \\geq 2$ since all the parameters are non-negative integers. The positive root of the quadratic equation is\n\n", "nexttext": "\nwhich satisfies conclusion of the theorem since $n = p_m = F(n)$ in this case.\n\\iffalse\nFirst we write\n\n", "file": "1202.0276.tex", "index": 11, "pos": 29210, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle g(n)=\\frac{(j-2s)+\\sqrt{(2s-j)^{2}+4(2jn+2s+1-3j)}}{2}\" display=\"inline\"><mrow><mrow><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>j</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><msqrt><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow><mo>-</mo><mi>j</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mrow><mn>4</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi><mo>\u2062</mo><mi>n</mi></mrow><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>-</mo><mrow><mn>3</mn><mo>\u2062</mo><mi>j</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></msqrt></mrow><mn>2</mn></mfrac></mstyle></mrow></math>"}, {"text": "\\begin{align*}\nn = 1+\\sum_{i=0}^m(s+ij+1)\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\nwhich satisfies conclusion of the theorem since $n = p_m = F(n)$ in this case.\n\\iffalse\nFirst we write\n\n", "nexttext": "\n\nand simplifying summations gives us\n\n", "file": "1202.0276.tex", "index": 13, "pos": 29407, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle n=1+\\sum_{i=0}^{m}(s+ij+1)\" display=\"inline\"><mrow><mi>n</mi><mo>=</mo><mrow><mn>1</mn><mo>+</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>m</mi></munderover></mstyle><mrow><mo stretchy=\"false\">(</mo><mrow><mi>s</mi><mo>+</mo><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>"}, {"text": "\\begin{align*}\nn = 1+(m+1)s + \\frac{j(m+1)m}{2} + (m+1)\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\nand simplifying summations gives us\n\n", "nexttext": "\n\nNow we multiply both sides by $j$ to get\n\n", "file": "1202.0276.tex", "index": 15, "pos": 29500, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle n=1+(m+1)s+\\frac{j(m+1)m}{2}+(m+1)\" display=\"inline\"><mrow><mi>n</mi><mo>=</mo><mrow><mn>1</mn><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>s</mi></mrow><mo>+</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>m</mi></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>"}, {"text": "\\begin{align*}\njn = j(m+1)s + \\frac{j(m+1)jm}{2} + j(m+1) + j\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\nNow we multiply both sides by $j$ to get\n\n", "nexttext": "\n\nWe can rewrite this as\n\n", "file": "1202.0276.tex", "index": 17, "pos": 29612, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle jn=j(m+1)s+\\frac{j(m+1)jm}{2}+j(m+1)+j\" display=\"inline\"><mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>n</mi></mrow><mo>=</mo><mrow><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>s</mi></mrow><mo>+</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>j</mi><mo>\u2062</mo><mi>m</mi></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mi>j</mi></mrow></mrow></math>"}, {"text": "\\begin{align*}\njn = j(m+1)s + s - s + \\frac{(j(m+1)+1-1)(jm+j+1-j-1)}{2} + j(m+1) + 1+j-1\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\nWe can rewrite this as\n\n", "nexttext": "\n\nwhich is equivalent to\n\n", "file": "1202.0276.tex", "index": 19, "pos": 29712, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle jn=j(m+1)s+s-s+\\frac{(j(m+1)+1-1)(jm+j+1-j-1)}{2}+j(m+1)+1+j-1\" display=\"inline\"><mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>n</mi></mrow><mo>=</mo><mrow><mrow><mrow><mrow><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>s</mi></mrow><mo>+</mo><mi>s</mi></mrow><mo>-</mo><mi>s</mi></mrow><mo>+</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>m</mi></mrow><mo>+</mo><mi>j</mi><mo>+</mo><mn>1</mn></mrow><mo>-</mo><mi>j</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mrow><mi>j</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>1</mn><mo>+</mo><mi>j</mi></mrow><mo>-</mo><mn>1</mn></mrow></mrow></math>"}, {"text": "\\begin{align*}\njn = sg(n) - s + \\frac{(g(n)-1)(g(n)-j-1)}{2} + g(n)+j-1\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\nwhich is equivalent to\n\n", "nexttext": "\n\nTherefore, we have the following quadratic\n\n", "file": "1202.0276.tex", "index": 21, "pos": 29840, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle jn=sg(n)-s+\\frac{(g(n)-1)(g(n)-j-1)}{2}+g(n)+j-1\" display=\"inline\"><mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>n</mi></mrow><mo>=</mo><mrow><mrow><mrow><mrow><mi>s</mi><mo>\u2062</mo><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mi>s</mi></mrow><mo>+</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mi>j</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mrow><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mi>j</mi></mrow><mo>-</mo><mn>1</mn></mrow></mrow></math>"}, {"text": "\\begin{align*}\ng^2(n) + (2s-j)g(n) + (3j-2s-1-2jn) = 0\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\nTherefore, we have the following quadratic\n\n", "nexttext": "\n\\fi\n\nFinally we extend this result to all the other nodes in the tree. Between any two successive leaf nodes we know that $g(n)$ is constant and equals the value at the leaf with the largest label which is still smaller than $n$. But as we observed at the outset, this leaf node has label $F(n)$, so $g(n)=g(F(n))$. But $F(F(n))=F(n)$, which completes the proof.\n\n\\end{proof}\n\nWe conclude by deriving a simple closed form solution for the recursion $g_{1,s,1}(n)$. Of course we could do so by inserting $j=1$ in the preceding formula. What follows is an alternate approach which makes use of the known result (\\ref{closed}) for $j=1$ and $s=0$. First we show that we need only examine the case $s<j$.\n\n\\begin{theorem}\nFor $s \\geq j$ and $\\lambda=1$, if $s=qj+r$ with $0\\leq r<j$ and $\\alpha=\\sum\\limits_{i=0}^{q-1}(r+ij+1)$, then $g_{j,s,1}(n) = g_{j,r,1}(n+\\alpha) -qj$.\n\\label{thm:reduce}\n\\end{theorem}\n\n\\begin{proof}\nIn this proof we will denote the infinite labeled tree ${\\mathcal K}$ constructed using parameters $j,s$ and $\\lambda=1$ by ${\\mathcal K}_{j,s}$. Similarly, we denote the infinite labeled tree ${\\mathcal K}$ constructed using parameters $j,r$ and $\\lambda=1$ by ${\\mathcal K}_{j,r}$. We know that ${\\mathcal K}_{j,s}(n)={\\mathcal K}_0, \\ldots, {\\mathcal K}^*_m$ where ${\\mathcal K}_i$, $0\\leq i < m$ is a chain having $s+ij+1$ labels with one extra label in the initial leaf of ${\\mathcal K}_0$. Since ${\\mathcal K}^*_m$ is possible incomplete it contains $t \\leq s+mj+1$ labels. Similarly, ${\\mathcal K}_{j,r}(n+\\alpha) = {\\mathcal K}'_0, \\ldots, {\\mathcal K}'^*_p$. Since each such chain ${\\mathcal K}'_i$ has exactly $r+ij+1$ labels (with one extra label on initial leaf of ${\\mathcal K}_0$) the first $q$ of these chains have $1+\\alpha=1+\\sum_{i=0}^{q-1}(r+ij+1)$. The remaining chains ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_p$ need to have $n-1$ labels. Observe that ${\\mathcal K}'_{q+i}$, $0 \\leq i$ has exactly $r+qj+ij+1=s+ij+1$ labels. If we let  ${\\mathcal K}'^*_{q+m}$ be a portion of ${\\mathcal K}'_{q+m}$ with $t$ labels on it then ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_{q+m}$ has the same number of labels as ${\\mathcal K}_0, \\ldots, {\\mathcal K}^*_m$ not counting initial leaf of ${\\mathcal K}_0$. That is, ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_{q+m}$ has the same number of labels as ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_p$ which shows that $p=q+m$ and ${\\mathcal K}'^*_p$ has $t$ labels. This implies that ${\\mathcal K}_{j,r}(n+\\alpha)$ has $q$ more leaves with weight $j$ than ${\\mathcal K}_{j,s}(n)$ and the proof is complete.\n\n\\end{proof}\n\nTheorem \\ref{thm:reduce} enables us to find a simple closed form solution for the recursion $g_{1,s,1}(n)$. In this case $r=0$ and $\\alpha=\\sum_{i=1}^s i = \\binom{s+1}{2}$. Therefore, $g_{1,s,1}(n) = g_{1,0,1}(n+\\binom{s+1}{2}) - s$. Using the closed form solution for $g_{1,0,1}(n)$ given by (\\ref{closed}), we write\n\n", "file": "1202.0276.tex", "index": 23, "pos": 29970, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle g^{2}(n)+(2s-j)g(n)+(3j-2s-1-2jn)=0\" display=\"inline\"><mrow><mrow><mrow><msup><mi>g</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow><mo>-</mo><mi>j</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>j</mi></mrow><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>s</mi></mrow><mo>-</mo><mn>1</mn><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi><mo>\u2062</mo><mi>n</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow></math>"}, {"text": "\\begin{align*}\ng_{1,s,1}(n) = \\left\\lfloor \\frac{ \\left\\lfloor \\sqrt{8(n+\\binom{s+1}{2})} \\right\\rfloor + 1}{2}\\right\\rfloor - s.\n\\end{align*}", "type": "latex", "itemtype": "equation", "prevtext": "\n\\fi\n\nFinally we extend this result to all the other nodes in the tree. Between any two successive leaf nodes we know that $g(n)$ is constant and equals the value at the leaf with the largest label which is still smaller than $n$. But as we observed at the outset, this leaf node has label $F(n)$, so $g(n)=g(F(n))$. But $F(F(n))=F(n)$, which completes the proof.\n\n\\end{proof}\n\nWe conclude by deriving a simple closed form solution for the recursion $g_{1,s,1}(n)$. Of course we could do so by inserting $j=1$ in the preceding formula. What follows is an alternate approach which makes use of the known result (\\ref{closed}) for $j=1$ and $s=0$. First we show that we need only examine the case $s<j$.\n\n\\begin{theorem}\nFor $s \\geq j$ and $\\lambda=1$, if $s=qj+r$ with $0\\leq r<j$ and $\\alpha=\\sum\\limits_{i=0}^{q-1}(r+ij+1)$, then $g_{j,s,1}(n) = g_{j,r,1}(n+\\alpha) -qj$.\n\\label{thm:reduce}\n\\end{theorem}\n\n\\begin{proof}\nIn this proof we will denote the infinite labeled tree ${\\mathcal K}$ constructed using parameters $j,s$ and $\\lambda=1$ by ${\\mathcal K}_{j,s}$. Similarly, we denote the infinite labeled tree ${\\mathcal K}$ constructed using parameters $j,r$ and $\\lambda=1$ by ${\\mathcal K}_{j,r}$. We know that ${\\mathcal K}_{j,s}(n)={\\mathcal K}_0, \\ldots, {\\mathcal K}^*_m$ where ${\\mathcal K}_i$, $0\\leq i < m$ is a chain having $s+ij+1$ labels with one extra label in the initial leaf of ${\\mathcal K}_0$. Since ${\\mathcal K}^*_m$ is possible incomplete it contains $t \\leq s+mj+1$ labels. Similarly, ${\\mathcal K}_{j,r}(n+\\alpha) = {\\mathcal K}'_0, \\ldots, {\\mathcal K}'^*_p$. Since each such chain ${\\mathcal K}'_i$ has exactly $r+ij+1$ labels (with one extra label on initial leaf of ${\\mathcal K}_0$) the first $q$ of these chains have $1+\\alpha=1+\\sum_{i=0}^{q-1}(r+ij+1)$. The remaining chains ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_p$ need to have $n-1$ labels. Observe that ${\\mathcal K}'_{q+i}$, $0 \\leq i$ has exactly $r+qj+ij+1=s+ij+1$ labels. If we let  ${\\mathcal K}'^*_{q+m}$ be a portion of ${\\mathcal K}'_{q+m}$ with $t$ labels on it then ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_{q+m}$ has the same number of labels as ${\\mathcal K}_0, \\ldots, {\\mathcal K}^*_m$ not counting initial leaf of ${\\mathcal K}_0$. That is, ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_{q+m}$ has the same number of labels as ${\\mathcal K}'_q, \\ldots, {\\mathcal K}'^*_p$ which shows that $p=q+m$ and ${\\mathcal K}'^*_p$ has $t$ labels. This implies that ${\\mathcal K}_{j,r}(n+\\alpha)$ has $q$ more leaves with weight $j$ than ${\\mathcal K}_{j,s}(n)$ and the proof is complete.\n\n\\end{proof}\n\nTheorem \\ref{thm:reduce} enables us to find a simple closed form solution for the recursion $g_{1,s,1}(n)$. In this case $r=0$ and $\\alpha=\\sum_{i=1}^s i = \\binom{s+1}{2}$. Therefore, $g_{1,s,1}(n) = g_{1,0,1}(n+\\binom{s+1}{2}) - s$. Using the closed form solution for $g_{1,0,1}(n)$ given by (\\ref{closed}), we write\n\n", "nexttext": "\n\n\\section{Concluding remarks} \\label{sec5}\n\nThe results of this paper provide the first known example of a combinatorial interpretation for a non-slow solution to a nested recursion, through the use of the new technique of weighted leaf counting. This suggests that other nested recursions with non-slow solutions that occur as special cases of recursion (\\ref{recursion}) might also have combinatorial interpretations of a similar sort. This seems to be particularly the case for non-slow monotone solutions, as was the case for the Golomb recursion and its generalization. In subsequent work we plan to investigate several such recursion families.\n\n\\begin{thebibliography}{99}\n\n\\bibitem{CCT}\nJoseph Callaghan, John J. Chew III, and Stephen M. Tanny,\nOn the Behavior of a Family of Meta-Fibonacci Sequences,\n\\emph{SIAM J. Discrete Math.} 18(4) (2005), 794--824.\n\n\\bibitem{EIRT} A. Erickson, A. Isgur, B. W. Jackson, F. Ruskey, and S. M. Tanny, Nested Recurrence Relations With Conolly-Like Solutions, \\emph{SIAM J. Discrete Math.}, to appear.\n\n\\bibitem{Golomb1990}\nSolomon W. Golomb,\n  Discrete chaos: sequences satisfying strange recursions, preprint, undated.\n\n\\bibitem{HiTan}\nJ. Higham and S. Tanny, More well-behaved\n    meta-Fibonacci sequences, \\emph{Congr. Numer.} 98 (1993),\n    3-17.\n\n\\bibitem{Rpaper} Abraham Isgur, David Reiss, and Stephen Tanny, Trees and meta-Fibonacci sequences, \\emph{Electron. J. of Combin.} 16 (2009), R129.\n\n\\bibitem{NonHomog} Abraham Isgur, Mustazee Rahman, and Stephen Tanny, Solving non-homogeneous nested recursions using trees, preprint, 2011.\n\n\\bibitem{sna} N. J. A. Sloane, Online Encyclopedia of\n    Integer Sequences, \\emph{http://www.research.att.com/~njas/sequences}.\n\n\\iffalse\n\\bibitem{sna} N. J. A. Sloane, \\emph{Online Encyclopedia of\n    Integer Sequences}, \\hfil\\break\n    \\href{http://www.research.att.com/~njas/sequences}{\\tt\n    http://www.research.att.com/$\\sim$njas/sequences}.\n\\fi\n\n\\end{thebibliography}\n\n\\end{document}", "file": "1202.0276.tex", "index": 25, "pos": 32953, "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle g_{1,s,1}(n)=\\left\\lfloor\\frac{\\left\\lfloor\\sqrt{8(n+\\binom{s+1}%&#10;{2})}\\right\\rfloor+1}{2}\\right\\rfloor-s.\" display=\"inline\"><mrow><mrow><mrow><msub><mi>g</mi><mrow><mn>1</mn><mo>,</mo><mi>s</mi><mo>,</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mo>\u230a</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mrow><mo>\u230a</mo><msqrt><mrow><mn>8</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>+</mo><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></msqrt><mo>\u230b</mo></mrow><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mo>\u230b</mo></mrow><mo>-</mo><mi>s</mi></mrow></mrow><mo>.</mo></mrow></math>"}]